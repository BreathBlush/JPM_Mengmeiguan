LuaLatex 字体缓冲建立：$luaotfload-tool --update --force / $sudo updmap or $updmap-sys	/ $updmap-user / $updmap --sys --force
TexLive 字体配置： texlive-fontconfig.conf
TexLive 字体路径：/usr/local/texlive/2019/texmf-dist/fonts

$mktexfmt latex.fmt / xetex.fmt

$sudo mktexlsr. 刷新字体

（1）使用：LuaLatex（不要在非ASCII目录下运行！模版文件名应该为ASCII码）:

（1.1）编译：lualatex xxx.tex  如果一切正确，将生成输出pdf文件
（1.2）基础模版参考：
\documentclass[a4paper, oneside]{ltjtbook}
\usepackage{luatexja}
\usepackage{luacode}
\usepackage{luatexja-fontspec}
\usepackage[a5paper, scale = 0.80, centering]{geometry}
\usepackage{moresize}

\setmainjfont[BoldFont = SourceHanSerifTC-Bold.otf]{FZKT_GB18030.ttf}
\setsansjfont[BoldFont = SourceHanSansTC-Bold.otf]{FZKT_GB18030.ttf}
\newfontfamily\Kai{FZKT_GB18030.ttf}
\setlength\columnsep{3\Cwd}
\setlength\parindent{2em}
\setlength{\parskip}{0.75em} 

\input{title}
\date{}

\begin{document}
\maketitle
\input{contents}
\end{document}

添加外部PDF页：
\includepdf[pages={26},fitpaper=true]{tst.pdf}

定义你的颜色：
\definecolor{mydarkgray}{RGB}{96, 96, 96}

重定义环境：
\let\quotationold\quotation
\let\endquotationold\endquotation
\renewenvironment{quotation}{\kaishu\quotationold}{\endquotationold}

自定义footnote的横线：
\def\enoteheading{\section*{\notesname}%
  \mbox{}\par\vskip-2.3\baselineskip\noindent\rule{.5\textwidth}{0.4pt}\par\vskip\baselineskip}
\makeatother

自定义环境（下面环境定义段落左右边距。同时消除段落之间额外距离。当然也可以自定义间距）：
Latex段落松紧：
https://tex.stackexchange.com/questions/4959/how-do-i-indent-all-lines-of-a-paragraph-so-that-it-looks-like-a-blockquote/4970#4970

\newenvironment{myquote}[1][\kaishu]{\par%
	\setlength{\parskip}{0em}%
	\setlength{\parsep}{0em}%
	%\setlength{\topsep}{0em}%
	#1%
   	\list{}{%
		\setlength{\topsep}{0.5em}%
   		\noindent%
   	 	\setlength{\parskip}{0em}%
		\setlength{\parsep}{0em}%
		\setlength\itemsep{0em}%
   	 	\leftmargin4em%
   	 	\rightmargin1em%
	}%
   	\raggedright\item\relax
}{\endlist\selectfont\vspace{-0.5em}\par}
使用时：
\begin{myquote}[]
\end{myquote}


\newenvironment{myquote}[1][\setlength{\hangindent}{4em}]{%
\vspace{0.5em}\everypar{\noindent#1\hangafter=0}\kaishu\raggedright}
{\par%
\vspace{0.5em}
}

右对齐：建议使用\raggedleft，不建议使用\flushright。因为会增加额外垂直空间。左对齐同样注意！

目录加点：
\newcommand\mydot[1]{\scalebox{#1}{.}}
\renewcommand\cftdot{\mydot{2}}
\renewcommand\cftdotsep{3}
%\renewcommand\cftpartnumwidth{6em}
\renewcommand{\cftchapleader}{\hspace{0.2em}{\cftdotfill{\cftdotsep}}}
%\renewcommand{\cftpnumalign}{l}

%control the right margin of toc-dots:
\makeatletter
\def\@pnumwidth{3.2em}
\makeatother

Zh-Number宏包：https://ctan.org/pkg/zhnumber。中文页码：
\pagenumbering{zhdig}

添加目录本身到PDF书签（去除目录第一页footer页码）：
\cleardoublepage
\tableofcontents
\pdfbookmark{\contentsname}{toc}
%prevent the 1st page of TOC generate foot page number:
\addtocontents{toc}{\protect\thispagestyle{empty}}
%\mainmatter

（1.3）字体文件的安装：
    LuaText能扫描到TexLive安装目录下的字体： /usr/local/texlive/2019/texmf-dist/fonts/truetype/
	也能扫描到系统已经安装的字体。例如我的Mac环境，字体安装路径：/Users/<username>/Library/Fonts
	通常不想安装字体到系统的话，拷贝至TextLive的字体发布目录即可。运行：
	luaotfload-tool 重建LuaTex字体数据库
	
	update font map:	sudo updmap-sys	
	
（1.4）字体的声明与使用：
在TEX源文件中直接使用已经安装的True type文件名称（字体文件名，带后缀）：
    \setmainjfont[BoldFont = SourceHanSerifTC-Bold.otf]{FZKT_GB18030.ttf}
    \setsansjfont[BoldFont = SourceHanSansTC-Bold.otf]{FZKT_GB18030.ttf}
	
自定义字体声明如下（也是直接使用字体文件名称）：	
    \newfontfamily\Kai{SourceHanSansTC-Regular.otf}
	
	\renewenvironment{quote}{\kaishu\quotateold{\parindent2\Cwd}}{\endquoteold}
	
	\newcommand{\innerzhushi}{\kaishu}{\small}{\selectfont}
	

FontCreator 造字注意Glyph的RSB数值！ https://glyphsapp.com/blog/new-features-in-glyphs-2-6 (Right side bearing)
